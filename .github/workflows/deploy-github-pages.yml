name: Deploy to GitHub Pages (Limited - Static Only)

on:
  push:
    branches:
      - main
    paths:
      - "oceanguard-frontend/**"
      - ".github/workflows/deploy-github-pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: oceanguard-frontend/package-lock.json

      - name: Install dependencies
        working-directory: oceanguard-frontend
        run: npm ci

      - name: Configure for static export (with auto basePath)
        working-directory: oceanguard-frontend
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          REPO="${GITHUB_REPOSITORY##*/}"
          if [ "$REPO" = "${OWNER}.github.io" ]; then
            BASE_PATH=""
          else
            BASE_PATH="/${REPO}"
          fi
          echo "Using basePath= for static export"
          cat > next.config.ts << EOF
          import type { NextConfig } from "next";
          const nextConfig: NextConfig = {
            reactStrictMode: true,
            output: export,
            trailingSlash: true,
            images: { unoptimized: true },
            basePath: ,
          };
          export default nextConfig;
          EOF

      - name: Remove dynamic routes for static export
        working-directory: oceanguard-frontend
        run: |
          rm -rf app/actions/\[id\]
          echo "Removed dynamic route /actions/[id] for static export"

      - name: Build
        working-directory: oceanguard-frontend
        run: npm run build

      - name: Add .nojekyll
        working-directory: oceanguard-frontend
        run: touch out/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: oceanguard-frontend/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
